#pragma once

#include "cpu.h"
#include "addressing_modes.h"

// A negative cycles count is used to determine if it needs to check for page crossing and increase by one
// (absolute value is used for computing cycles)

struct addressing_data addressing[0xFF] = {
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ASL, ZEROPAGE, 5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {&ASL, ACCUMULATOR, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ASL, ABSOLUTE, 6}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {&ASL, ZEROPAGEX, 6}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {&ASL, ABSOLUTEX, 7}, {0, 0, 0}, {0, 0, 0}, {&AND, INDIRECTX, 6}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&AND, ZEROPAGE, 3}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {&AND, IMMEDIATE, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&AND, ABSOLUTE, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&AND, INDIRECTY, -5},
    // 50
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&AND, ZEROPAGEX, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&AND, ABSOLUTEY, -4}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {&AND, ABSOLUTEX, -4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, INDIRECTX, 6}, {0, 0, 0}, {0, 0, 0},
    // 100
    {0, 0, 0}, {&ADC, ZEROPAGE, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, IMMEDIATE, 2}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, ABSOLUTE, 4},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, INDIRECTY, -5}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, ZEROPAGEX, 4}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&ADC, ABSOLUTEX, -4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    // 150
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {&LDA, INDIRECTX, 6}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&LDA, ZEROPAGE, 3}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&LDA, IMMEDIATE, 2},
    {0, 0, 0}, {&ADC, ABSOLUTEY, -4}, {0, 0, 0}, {&LDA, ABSOLUTE, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&LDA, INDIRECTY, -5}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {&LDA, ZEROPAGEX, 4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&LDA, ABSOLUTEY, -4}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {&LDA, ABSOLUTEX, -4},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    // 200
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0},
    // 250
    {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}
};
